{"ast":null,"code":"// import { ADD_FAV, REMOVE_FAV } from \"./action-types\";\n\n// const initialState = {\n//   myFavorites: [],\n// };\n\n// const reducer = (state = initialState, { type, payload }) => {\n//   switch (type) {\n//     case ADD_FAV:\n//       return {\n//         ...state,\n//         myFavorites: [...state.myFavorites, payload],\n//       };\n\n//     case REMOVE_FAV:\n//       const newPayload = parseInt(payload);\n//       return {\n//         ...state,\n//         myFavorites: state.myFavorites.filter((elemento) => elemento.id !== newPayload),\n//       };\n\n//     default:\n//       return {\n//         ...state,\n//       };\n//   }\n// };\n\n// export default reducer;\n\n// const array = [1, 2, 3, 4, 5, 6, 7];\n// const numero = 1;\n// console.log([...array, numero]);\n\n// console.log(\n\n// );\n// const newArray = array.filter((elementos) => {\n//   return elementos !== numero;\n// });\n\n// console.log(newArray);\nconst array1 = ['a', 'b', 'c'];\narray1.forEach(element => console.log(element));","map":{"version":3,"names":["array1","forEach","element","console","log"],"sources":["/home/miguel/Escritorio/proyectos/11/integrador/src/redux/reducer.js"],"sourcesContent":["// import { ADD_FAV, REMOVE_FAV } from \"./action-types\";\n\n// const initialState = {\n//   myFavorites: [],\n// };\n\n// const reducer = (state = initialState, { type, payload }) => {\n//   switch (type) {\n//     case ADD_FAV:\n//       return {\n//         ...state,\n//         myFavorites: [...state.myFavorites, payload],\n//       };\n\n//     case REMOVE_FAV:\n//       const newPayload = parseInt(payload);\n//       return {\n//         ...state,\n//         myFavorites: state.myFavorites.filter((elemento) => elemento.id !== newPayload),\n//       };\n\n//     default:\n//       return {\n//         ...state,\n//       };\n//   }\n// };\n\n// export default reducer;\n\n// const array = [1, 2, 3, 4, 5, 6, 7];\n// const numero = 1;\n// console.log([...array, numero]);\n\n// console.log(\n\n// );\n// const newArray = array.filter((elementos) => {\n//   return elementos !== numero;\n// });\n\n// console.log(newArray);\nconst array1 = ['a', 'b', 'c'];\n\narray1.forEach(element => console.log(element));"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAE9BA,MAAM,CAACC,OAAO,CAACC,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}